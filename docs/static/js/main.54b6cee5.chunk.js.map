{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/Popular.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","index","Popular","onClick","propTypes","PropTypes","func","isRequired","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54b6cee5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Write a category\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (category) => {\r\n  const key = \"4SC2ZpZrsrUt7ukO0U7QHM6bQxlXC6Us\";\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(\r\n    category\r\n  )}&api_key=${key}`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className={`card animate__animated animate__fadeIn animate__delay-1s`}>\r\n      <div className=\"img-wrapper\">\r\n        <img src={url} alt={title} />\r\n      </div>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div className=\"grid-wrapper\">\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img, index) => (\r\n          <GifGridItem key={img.id} {...img} index={index} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React from \"react\";\r\n\r\nconst Popular = ({ setCategories }) => {\r\n  return (\r\n    <div className=\"popular\">\r\n      <h3>Popular</h3>\r\n      <div className=\"popular-wrapper\">\r\n        <button onClick={() => setCategories((cats) => [\"Overwatch\", ...cats])}>\r\n          Overwatch\r\n        </button>\r\n        <button onClick={() => setCategories((cats) => [\"Capitol\", ...cats])}>\r\n          Capitol\r\n        </button>\r\n        <button onClick={() => setCategories((cats) => [\"Pokemon\", ...cats])}>\r\n          Pokemon\r\n        </button>\r\n        <button onClick={() => setCategories((cats) => [\"Cats\", ...cats])}>\r\n          Cats\r\n        </button>\r\n        <button onClick={() => setCategories((cats) => [\"Covid\", ...cats])}>\r\n          Covid\r\n        </button>\r\n        <button\r\n          onClick={() => setCategories((cats) => [\"Animal Crossing\", ...cats])}\r\n        >\r\n          Animal Crossing\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Popular;\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./AddCategory\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport GifGrid from \"./GifGrid\";\r\nimport Popular from \"./Popular\";\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Gif Expert</h2>\r\n      <p>What do you like to find</p>\r\n      <Popular setCategories={setCategories} />\r\n      <AddCategory setCategories={setCategories} />\r\n\r\n      {categories.map((category) => (\r\n        <GifGrid key={category} category={category} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./components/GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}